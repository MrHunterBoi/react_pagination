{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","arrayOfPages","Array","from","keys","handlePageClicked","newPageNumber","_jsxs","className","children","_jsx","cn","disabled","onClick","href","map","pageNumber","active","concat","items","to","numbers","n","push","getNumbers","number","App","setPerPage","useState","setCurrentPage","totalItemsAmount","length","minItemNumberOnPage","maxItemNumberOnPage","itemsToView","filter","_","index","item","value","onChange","event","target","id","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b126e3ac.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const arrayOfPages = Array.from(Array(amountOfPages).keys());\n\n  const handlePageClicked = (newPageNumber: number) => {\n    if (currentPage !== newPageNumber\n      && newPageNumber >= 0\n      && newPageNumber <= amountOfPages) {\n      onPageChange(newPageNumber);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          onClick={() => handlePageClicked(currentPage - 1)}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n\n      {arrayOfPages.map(pageNumber => (\n        <li\n          className={cn(\n            'page-item',\n            { active: pageNumber + 1 === currentPage },\n          )}\n          key={pageNumber + 1}\n        >\n          <a\n            onClick={() => handlePageClicked(pageNumber + 1)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber + 1}`}\n          >\n            {pageNumber + 1}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === amountOfPages },\n        )}\n      >\n        <a\n          onClick={() => handlePageClicked(currentPage + 1)}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfPages}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(number => `Item ${number}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const totalItemsAmount = items.length;\n  const minItemNumberOnPage = currentPage * perPage - perPage + 1;\n  const maxItemNumberOnPage = currentPage * perPage > totalItemsAmount\n    ? totalItemsAmount\n    : currentPage * perPage;\n\n  const handleChangingPage = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const itemsToView = items\n    .filter(\n      (_, index) => index + 1 >= minItemNumberOnPage\n        && index + 1 <= maxItemNumberOnPage,\n    )\n    .map(item => (\n      <li key={item + 1} data-cy=\"item\">{item}</li>\n    ));\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${minItemNumberOnPage} - ${maxItemNumberOnPage} of ${totalItemsAmount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItemsAmount} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={handleChangingPage}\n      />\n\n      <ul>\n        {itemsToView}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}