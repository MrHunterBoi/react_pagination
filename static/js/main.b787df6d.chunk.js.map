{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","arrayOfPages","Array","from","keys","_jsxs","className","children","_jsx","cn","disabled","onClick","href","map","pageNumber","active","concat","items","to","numbers","n","push","getNumbers","App","setPerPage","useState","setCurrentPage","totalItemsAmount","length","minItemNumberOnPage","maxItemNumberOnPage","value","onChange","event","target","id","htmlFor","filter","_","index","item","ReactDOM","render","document","getElementById"],"mappings":"qLAUO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAc,EAAC,aACfC,GACDJ,EACC,MAAMK,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAeC,MAAMC,KAAKD,MAAMJ,GAAeM,QAErD,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBd,IAAqBW,SAC9DC,cAAA,KACEG,QAASA,KACa,IAAhBf,GACFC,EAAaD,EAAc,IAG/B,UAAQ,WACRU,UAAU,YACVM,KAAK,QACL,gBAA+B,IAAhBhB,EAAkBW,SAClC,WAKFN,EAAaY,KAAIC,GAChBN,cAAA,MACEF,UAAWG,IACT,YACA,CAAEM,OAAQD,EAAa,IAAMlB,IAC7BW,SAGFC,cAAA,KACEG,QAASA,KACHf,IAAgBkB,EAAa,GAC/BjB,EAAaiB,EAAa,IAG9B,UAAQ,WACRR,UAAU,YACVM,KAAI,IAAAI,OAAMF,EAAa,GAAIP,SAE1BO,EAAa,KAZXA,EAAa,KAiBtBN,cAAA,MACEF,UAAWG,IACT,YACA,CAAEC,SAAUd,IAAgBE,IAC5BS,SAEFC,cAAA,KACEG,QAASA,KACHf,IAAgBE,GAClBD,EAAaD,EAAc,IAG/B,UAAQ,WACRU,UAAU,YACVM,KAAK,QACL,gBAAehB,IAAgBE,EAAcS,SAC9C,eCvET,MAAMU,ECLC,SAAoBd,EAAce,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIjB,EAAMiB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIT,KAAIO,GAAC,QAAAJ,OAAYI,KAEpCG,EAAgBA,KAC3B,MAAO5B,EAAS6B,GAAcC,mBAAS,IAChC7B,EAAa8B,GAAkBD,mBAAS,GAEzCE,EAAmBV,EAAMW,OACzBC,EAAsBjC,EAAcD,EAAUA,EAAU,EACxDmC,EAAsBlC,EAAcD,EAAUgC,EAChDA,EACA/B,EAAcD,EAMlB,OACEU,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAS,OACvBpB,EAAW,YAAAoB,OAAWa,EAAmB,OAAAb,OAAMc,EAAmB,QAAAd,OAAOW,EAAgB,OAGpGtB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE0B,MAAOpC,EACPqC,SAAUC,IACRP,EAAe,GACfF,GAAYS,EAAMC,OAAOH,QAE3B,UAAQ,kBACRI,GAAG,kBACH7B,UAAU,eAAcC,SAAA,CAExBC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,OACnBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,YAIvBC,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAKlEC,cAAChB,EAAU,CACTE,MAAOiC,EACPhC,QAASA,EACTC,YAAaA,EACbC,aAxCsBiB,IAC1BY,EAAeZ,MA0CbN,cAAA,MAAAD,SACGU,EACEoB,QACC,CAACC,EAAGC,IAAUA,EAAQ,GAAKV,GACtBU,EAAQ,GAAKT,IAEnBjB,KAAI2B,GACHhC,cAAA,MAAmB,UAAQ,OAAMD,SAAEiC,GAA1BA,EAAO,WEhE5BC,IAASC,OAAOlC,cAACe,EAAG,IAAKoB,SAASC,eAAe,U","file":"static/js/main.b787df6d.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (pageNumber: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const arrayOfPages = Array.from(Array(amountOfPages).keys());\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n\n      {arrayOfPages.map(pageNumber => (\n        <li\n          className={cn(\n            'page-item',\n            { active: pageNumber + 1 === currentPage },\n          )}\n          key={pageNumber + 1}\n        >\n          <a\n            onClick={() => {\n              if (currentPage !== pageNumber + 1) {\n                onPageChange(pageNumber + 1);\n              }\n            }}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber + 1}`}\n          >\n            {pageNumber + 1}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === amountOfPages },\n        )}\n      >\n        <a\n          onClick={() => {\n            if (currentPage !== amountOfPages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfPages}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const totalItemsAmount = items.length;\n  const minItemNumberOnPage = currentPage * perPage - perPage + 1;\n  const maxItemNumberOnPage = currentPage * perPage > totalItemsAmount\n    ? totalItemsAmount\n    : currentPage * perPage;\n\n  const handleChangingPage = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${minItemNumberOnPage} - ${maxItemNumberOnPage} of ${totalItemsAmount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            onChange={event => {\n              setCurrentPage(1);\n              setPerPage(+event.target.value);\n            }}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItemsAmount} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={handleChangingPage}\n      />\n\n      <ul>\n        {items\n          .filter(\n            (_, index) => index + 1 >= minItemNumberOnPage\n              && index + 1 <= maxItemNumberOnPage,\n          )\n          .map(item => (\n            <li key={item + 1} data-cy=\"item\">{item}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}